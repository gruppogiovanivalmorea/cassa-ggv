scelte da fare:

menu:
    - centralizzato? sincronizzato? copie completamente separate?
    - su db? file?
    
    -> possibili soluzioni:
        -> copie separate, una per server py (si renderizza solo via server py)
            si legge sempre staticamente il file menu.json (si modifica solo a mano)
            
        -> copie separate, su couch db, modifica via interfaccia grafica
            si carica il menu via couch db 
        
        -> come sopra, ma si usa la replicazione del menu su server couch
            NOTA: va testata replica di tutte operazioni crud (se vengono prese da server centrale e messe nei locali)
            
        -> copia centralizzata su server couch db, modifica via interfaccia grafica
            si prova a caricare nuovo menu dal server ad ogni caricamento di index.html
            se regular si salva in local storage
            altrimenti si carica copia da localstorage
            


finestra cliente:
    forse Ã¨ + performante un approccio cosi:
        - nella finestra si genera codice html direttamente dal parent
        - quando cambia ordine si rigenera senza mai ricaricare la pagina
        - (non serve angular in pagina cliente, ne che questa esista (generata))
        - ancora + efficiente:
            - quando si aggiorna non rigenerare intera pagina ma solo parte di dom modificata

possibili mancanze:
    azioni su ultimo scontrino (copia, elimina, riapri per modifica)
    visualizzare totale ultimo scontrino 

fare stampa su socket



test su replicazione, server couchdb